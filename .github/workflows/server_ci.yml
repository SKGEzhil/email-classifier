name: Server CI

on:
  push:
    branches:
      - main
    paths:
      - 'server/**'
      - '.github/workflows/server_ci.yml'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/email-classifier-server:${{ github.sha }} \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/email-classifier-server:latest \
            server

      - name: Run tests inside container
        env:
          GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}
          EMAIL_CLASSIFIER_URL:                ${{ secrets.EMAIL_CLASSIFIER_URL }}
          OAUTH2_REDIRECT_URI:                 http://127.0.0.1:8001/oauth2callback
          GOOGLE_CLIENT_CONFIG_PATH:           src/credentials_.json
          GOOGLE_TOKEN_PATH:                   src/token.json
        run: |
          docker run --rm \
            -w /app \
            -v "${{ github.workspace }}/server:/app" \
            -e GOOGLE_APPLICATION_CREDENTIALS_JSON \
            -e EMAIL_CLASSIFIER_URL \
            -e OAUTH2_REDIRECT_URI \
            -e GOOGLE_CLIENT_CONFIG_PATH \
            -e GOOGLE_TOKEN_PATH \
            ${{ secrets.DOCKERHUB_USERNAME }}/email-classifier-server:${{ github.sha }} \
            pytest /app/tests --maxfail=1 --disable-warnings -q

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/email-classifier-server:${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/email-classifier-server:latest

  push-to-ecr:
    needs: build-and-test
    runs-on: ubuntu-latest
    env:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_REGION: ap-south-1       # <-- static region in env
      IMAGE_NAME: email-classifier-server
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}   # <-- use env.AWS_REGION

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Pull image from DockerHub
        run: |
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

      - name: Log in to AmazonECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Tag and push to AmazonECR
        run: |
          ECR_REGISTRY=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
                     $ECR_REGISTRY/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest \
                     $ECR_REGISTRY/${{ env.IMAGE_NAME }}:latest
          docker push $ECR_REGISTRY/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push $ECR_REGISTRY/${{ env.IMAGE_NAME }}:latest
